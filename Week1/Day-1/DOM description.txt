TOPIC:DOM(Data Object Model)

DOM is a way to represent the webpage in the structured hierarchical way so that it will become easier for programmers and users to glide through the document.Any
Web page is a document and can either be displayed in the browser window or as the HTML source but same either way.The DOM represent that same document so it can
be manipulated and be modified with aa scripting language such as Javascript.

For example, the standard DOM specifies that the getElementsByTagName method in the code below must return a list of all the <p> elements in the document:

const paragraphs = document.getElementsByTagName("p");
// paragraphs[0] is the first <p> element
// paragraphs[1] is the second <p> element, etc.
console.log(paragraphs[0].nodeName);

Nowadays DOM is bulit using multiple APIs that work together.The core DOM defines the objects that fundamentally describe a document and the objects within 
it. This is expanded upon as needed by other APIs that add new features and capabilities to the DOM.
In the beginning, JavaScript and the DOM were tightly intertwined, but eventually, they evolved into separate entities. The page content is stored in the DOM and 
may be accessed and manipulated via JavaScript, so that we may write this approximative equation:
API = DOM + JavaScript
When you create a script–whether it's inline in a <script> element or included in the web page by means of a script loading instruction–you can immediately begin 
using the API for the document or window elements to manipulate the document itself or to get at the children of that document, which are the various elements in 
the web page.